{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map, catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  postService(paramsReq) {\n    const headers = new HttpHeaders({\n      accept: 'aplication/json'\n    });\n    const {\n      url,\n      params,\n      body\n    } = paramsReq;\n    const options = {\n      headers,\n      params\n    };\n    return this.http.post(url, body, options).pipe(map(res => res), catchError(this.handerError));\n  }\n  getService(paramsReq) {\n    const headers = new HttpHeaders({\n      accept: 'aplication/json'\n    });\n    const {\n      url,\n      params\n    } = paramsReq;\n    const options = {\n      headers,\n      params\n    };\n    return this.http.get(url, options).pipe(map(res => res), catchError(this.handerError));\n  }\n  handerError(err) {\n    console.log(err.error);\n    return throwError(() => err);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;AACjF,SAAqBC,GAAG,EAAEC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAK9D,OAAM,MAAOC,UAAU;EAErBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACV;EAEJC,WAAW,CAACC,SAAc;IAC1B,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9BU,MAAM,EAAE;KACT,CAAC;IAEF,MAAM;MAAEC,GAAG;MAAEC,MAAM;MAAEC;IAAI,CAAE,GAAGL,SAAS;IACvC,MAAMM,OAAO,GAAG;MACdL,OAAO;MACPG;KACD;IACC,OAAO,IAAI,CAACN,IAAI,CAACS,IAAI,CAAIJ,GAAG,EAAEE,IAAI,EAAEC,OAAO,CAAC,CAACE,IAAI,CAACf,GAAG,CAACgB,GAAG,IAAIA,GAAG,CAAC,EAAEf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EAClG;EAEAC,UAAU,CAACX,SAAc;IACvB,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9BU,MAAM,EAAE;KACT,CAAC;IAEF,MAAM;MAAEC,GAAG;MAAEC;IAAM,CAAE,GAAGJ,SAAS;IACjC,MAAMM,OAAO,GAAG;MACdL,OAAO;MACPG;KACD;IACC,OAAO,IAAI,CAACN,IAAI,CAACc,GAAG,CAAIT,GAAG,EAAEG,OAAO,CAAC,CAACE,IAAI,CAACf,GAAG,CAACgB,GAAG,IAAIA,GAAG,CAAC,EAAEf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EAC3F;EAEMA,WAAW,CAAEG,GAAqB;IACxCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,KAAK,CAAC;IAEtB,OAAOrB,UAAU,CAAC,MAAMkB,GAAG,CAAC;EAC9B;;AApCWjB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAqB,SAAVrB,UAAU;EAAAsB,YAFT;AAAM","names":["HttpHeaders","map","catchError","throwError","ApiService","constructor","http","postService","paramsReq","headers","accept","url","params","body","options","post","pipe","res","handerError","getService","get","err","console","log","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Toño\\Desktop\\segundocorte\\MorePopullarMovies\\src\\app\\service\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService<T> {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  postService(paramsReq: any): Observable<T> {\n  const headers = new HttpHeaders({\n    accept: 'aplication/json',\n  });\n\n  const { url, params, body } = paramsReq;\n  const options = {\n    headers,\n    params\n  }\n    return this.http.post<T>(url, body, options).pipe(map(res => res), catchError(this.handerError));\n  }\n\n  getService(paramsReq: any): Observable<T> {\n    const headers = new HttpHeaders({\n      accept: 'aplication/json',\n    });\n\n    const { url, params } = paramsReq;\n    const options = {\n      headers,\n      params\n    }\n      return this.http.get<T>(url, options).pipe(map(res => res), catchError(this.handerError));\n    }\n\n  private handerError (err:HttpErrorResponse) {\n    console.log(err.error);\n\n    return throwError(() => err);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}